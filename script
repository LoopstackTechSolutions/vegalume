create database dbvegalume;
use dbvegalume;

-- Tabela que armazena os pratos disponíveis no sistema
create table tb_prato 
(
    idPrato int auto_increment primary key,
    nomePrato varchar(35) unique not null,
    precoPrato decimal(6,2) not null,
    descricaoPrato varchar(250) not null
);
-- Tabela que armazena os dados dos clientes
create table tb_cliente 
(
    idCliente int auto_increment primary key,
    nome varchar(60),
    senha varchar(30) not null,
    telefone decimal(11,0),
    email varchar(50) unique not null
);
-- Tabela que armazena os dados dos cartões de pagamento
create table tb_cartao
(
    numeroCartao decimal(16,0) primary key,
    nomeTitular varchar(30) not null,
    dataValidade date not null,
    cvv decimal(3,0) not null
);
-- Tabela com os endereços cadastrados
create table tb_endereco 
(
    cep decimal(8,0) primary key,
    cidade varchar(50) not null,
    bairro varchar(50) not null,
    rua varchar(50) not null,
    numero smallint not null
);
-- Tabela que armazena os dados dos funcionários do sistema
create table tb_funcionario (
    rm smallint auto_increment primary key,
    nome varchar(60) not null,
    senha varchar(30) not null,
    telefone decimal(11,0),
    email varchar(50) unique not null
);
-- Tabela que registra os pedidos feitos pelos clientes
create table tb_pedido 
(
    idPedido int auto_increment primary key,
    statusPagamento boolean not null,
    dataHoraPedido timestamp default current_timestamp(),
    rm smallint not null,
    cep decimal(8,0) not null,
    idCliente int not null,
    foreign key (rm) references tb_funcionario (rm),
    foreign key (cep) references tb_endereco (cep),
    foreign key (idCliente) references tb_cliente (idCliente)
);
-- Tabela que registra os pagamentos realizados pelos clientes
create table tb_pagamento
(
    idPagamento int auto_increment primary key,
    dataHoraPagamento timestamp default current_timestamp(),
    numeroCartao decimal(16,0),
    idPedido int not null,
    foreign key (numeroCartao) references tb_cartao (numeroCartao),
    foreign key (idPedido) references tb_pedido (idPedido)
);
-- Relação entre pratos e pedidos (cada pedido pode ter vários pratos e vice-versa)
create table tb_prato_pedido 
(
    idPrato int,
    idPedido int,
    qtdPedido int not null,
    detalhesPedido varchar(200),
    primary key (idPrato, idPedido),
    foreign key (idPrato) references tb_prato (idPrato),
    foreign key (idPedido) references tb_pedido (idPedido)
);
-- Relação entre clientes e seus cartões cadastrados (cada cliente pode ter vários cartões e vice-versa)
create table tb_cartao_cliente 
(
    idCliente int,
    numeroCartao decimal(16,0),
    primary key (idCliente, numeroCartao),
    foreign key (idCliente) references tb_cliente (idCliente),
    foreign key (numeroCartao) references tb_cartao (numeroCartao)
);
-- Relação entre clientes e seus endereços cadastrados
create table tb_endereco_cliente 
(
    idCliente int,
    cep decimal(8,0),
    primary key (idCliente, cep),
    foreign key (idCliente) references tb_cliente (idCliente),
    foreign key (cep) references tb_endereco (cep)
);